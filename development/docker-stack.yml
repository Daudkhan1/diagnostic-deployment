version: "3.8"

services:
  cantaloupe:
    image: islandora/cantaloupe:3
    container_name: cantaloupe_image_server
    ports:
      - "8182:8182"
    environment:
      - CANTALOUPE_HEAP_MIN=3G
      - CANTALOUPE_HEAP_MAX=5G
      - CANTALOUPE_HTTP_PORT=8182
      - CANTALOUPE_SOURCE_STATIC=S3Source
      - CANTALOUPE_S3SOURCE_ACCESS_KEY_ID=${PRAID_S3_ACCESS_KEY_ID}
      - CANTALOUPE_S3SOURCE_SECRET_KEY=${PRAID_S3_SECRET_ACCESS_KEY}
      - CANTALOUPE_S3SOURCE_BASICLOOKUPSTRATEGY_BUCKET_NAME=${PRAID_S3_BUCKET_NAME}
      - CANTALOUPE_S3SOURCE_REGION=${PRAID_S3_REGION_NAME}
      - CANTALOUPE_PROCESSOR_MANUALSELECTIONSTRATEGY_TIF=JaiProcessor
      - CANTALOUPE_S3SOURCE_LOOKUP_STRATEGY=ScriptLookupStrategy
      - CANTALOUPE_DELEGATE_SCRIPT_ENABLED=true
      - CANTALOUPE_DELEGATE_SCRIPT_PATHNAME=/opt/cantaloupe/delegates.rb
      - CANTALOUPE_CACHE_SERVER_SOURCE=""
    volumes:
      - /home/ubuntu/delegates.rb:/opt/cantaloupe/delegates.rb
    networks:
      - app-network
    restart: unless-stopped

  mongo:
    image: mongo:latest
    container_name: mongo_container
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    ports:
      - 27017:27017
    networks:
      - app-network
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet &&
        mongorestore /dump
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    volumes:
      - "mongo_data:/data/db"
      - "mongo_config:/data/configdb"
      - "./dump:/dump"
    restart: unless-stopped

  react_app:
    image: 831926608672.dkr.ecr.ap-south-1.amazonaws.com/diagnostic-ui:dev
    container_name: react_frontend
    ports:
      - "3000:5173"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
      restart_policy:
        condition: on-failure

  springboot-app:
    image: 831926608672.dkr.ecr.ap-south-1.amazonaws.com/diagnostic-runtime:dev
    container_name: springboot_container
    networks:
      - app-network
    environment:
      - SPRING_DATA_MONGODB_URI=${DB_MONGO_URL_PROD}
      - SPRING_PROFILES_ACTIVE=with-ai-annotation
      - ANONYMIZER_SERVICE_URL=http://13.233.103.240:8001
    ports:
      - 8080:8080
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
      restart_policy:
        condition: on-failure

  anonymizer-service:
    image: 831926608672.dkr.ecr.ap-south-1.amazonaws.com/diagnostic-anonymizer:dev
    container_name: anonymizer_container
    networks:
      - app-network
    environment:
      - AMAZON_S3_ACCESS_KEY_ID=${PRAID_S3_ACCESS_KEY_ID}
      - AMAZON_S3_SECRET_ACCESS_KEY=${PRAID_S3_SECRET_ACCESS_KEY}
      - AMAZON_S3_REGION_NAME=${PRAID_S3_REGION_NAME}
      - OUTPUT_DIRECTORY=/tmp
    ports:
      - 8001:8001
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
      restart_policy:
        condition: on-failure

volumes:
  mongo_data:
  mongo_config:

networks:
  app-network:
    driver: overlay





















# version: "3.8"

# services:
#   cantaloupe:
#     image: islandora/cantaloupe:3
#     container_name: cantaloupe_image_server
#     ports:
#       - "8182:8182"
#     environment:
#       - CANTALOUPE_HEAP_MIN=3G
#       - CANTALOUPE_HEAP_MAX=5G
#       - CANTALOUPE_HTTP_PORT=8182
#       - CANTALOUPE_SOURCE_STATIC=S3Source
#       - CANTALOUPE_S3SOURCE_ACCESS_KEY_ID=${AMAZON_S3_ACCESS_KEY_ID}
#       - CANTALOUPE_S3SOURCE_SECRET_KEY=${AMAZON_S3_SECRET_ACCESS_KEY}
#       - CANTALOUPE_S3SOURCE_BASICLOOKUPSTRATEGY_BUCKET_NAME=${S3_BUCKET_NAME}
#       - CANTALOUPE_S3SOURCE_REGION=${AMAZON_S3_REGION_NAME}
#       - CANTALOUPE_PROCESSOR_MANUALSELECTIONSTRATEGY_TIF=JaiProcessor
#       - CANTALOUPE_S3SOURCE_LOOKUP_STRATEGY=ScriptLookupStrategy
#       - CANTALOUPE_DELEGATE_SCRIPT_ENABLED=true
#       - CANTALOUPE_DELEGATE_SCRIPT_PATHNAME=/opt/cantaloupe/delegates.rb
#       - CANTALOUPE_CACHE_SERVER_SOURCE=""
#     volumes:
#       - /home/ubuntu/delegates.rb:/opt/cantaloupe/delegates.rb
#     networks:
#       - app-network
#     restart: unless-stopped

#   mongo:
#     image: mongo:latest
#     container_name: mongo_container
#     command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
#     ports:
#       - 27017:27017
#     networks:
#       - app-network
#     healthcheck:
#       test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet &&
#         mongorestore /dump
#       interval: 5s
#       timeout: 30s
#       start_period: 0s
#       retries: 30
#     volumes:
#       - "mongo_data:/data/db"
#       - "mongo_config:/data/configdb"
#       - "./dump:/dump"
#     restart: unless-stopped

#   react_app:
#     image: 831926608672.dkr.ecr.ap-south-1.amazonaws.com/diagnostic-ui:dev
#     container_name: react_frontend
#     ports:
#       - "3000:5173"
#     environment:
#       - NODE_ENV=production
#     networks:
#       - app-network
#     restart: unless-stopped
#     deploy:
#       mode: replicated
#       replicas: 1
#       update_config:
#         parallelism: 1
#         delay: 10s
#         order: start-first
#         failure_action: rollback
#         monitor: 30s
#       restart_policy:
#         condition: on-failure

#   springboot-app:
#     image: 831926608672.dkr.ecr.ap-south-1.amazonaws.com/diagnostic-runtime:dev
#     container_name: springboot_container
#     networks:
#       - app-network
#     environment:
#       - SPRING_DATA_MONGODB_URI=${DB_MONGO_URL_PROD}
#       - SPRING_PROFILES_ACTIVE=with-ai-annotation
#       - ANONYMIZER_SERVICE_URL=http://40.172.81.255:8001
#     ports:
#       - 8080:8080
#     restart: unless-stopped
#     deploy:
#       mode: replicated
#       replicas: 1
#       update_config:
#         parallelism: 1
#         delay: 10s
#         order: start-first
#         failure_action: rollback
#         monitor: 30s
#       restart_policy:
#         condition: on-failure

#   anonymizer-service:
#     image: 831926608672.dkr.ecr.ap-south-1.amazonaws.com/diagnostic-anonymizer:dev
#     container_name: anonymizer_container
#     networks:
#       - app-network
#     environment:
#       - AMAZON_S3_ACCESS_KEY_ID=${S3_SOURCE_ACCESS_KEY_ID}
#       - AMAZON_S3_SECRET_ACCESS_KEY=${S3_SOURCE_SECRET_KEY}
#       - AMAZON_S3_REGION_NAME=${S3_REGION}
#       - OUTPUT_DIRECTORY=/tmp
#     ports:
#       - 8001:8001
#     restart: unless-stopped
#     deploy:
#       mode: replicated
#       replicas: 1
#       update_config:
#         parallelism: 1
#         delay: 10s
#         order: start-first
#         failure_action: rollback
#         monitor: 30s
#       restart_policy:
#         condition: on-failure

# volumes:
#   mongo_data:
#   mongo_config:

# networks:
#   app-network:
#     driver: overlay